#!/bin/sh
#
###
## Customization done to base QCOW image:
#
export ASSUME_ALWAYS_YES=YES
pkg bootstrap -f
pkg2ng

pkg install curl scapy avahi-autoipd dmidecode isc-dhcp43-client mc bash sudo openresolv ca_root_nss rsync base64
#    py27-setuptools27 py27-eventlet py27-pip py27-cheetah py27-virtualenv

## DHCP
if [ ! -L /etc/resolv.conf ]; then
    cat /etc/resolv.conf > /usr/local/etc/resolvconf/run/resolv.conf && \
    ln -f -s /usr/local/etc/resolvconf/run/resolv.conf /etc/resolv.conf
fi

[ -d /var/lib ] || mkdir /var/lib
#mv /sbin/dhclient-script /sbin/dhclient-script--orig
#mv /usr/local/sbin/dhclient-script /usr/local/sbin/dhclient-script--orig
#sed "s:mv \(/etc/resolv.conf.\(dhclient6*\)\) /etc/resolv.conf:resolvconf -a \2 <\1 :"  /usr/local/sbin/dhclient-script--orig | \
#    sed -e "s/inet 0.0.0.0 netmask 0.0.0.0 \\\/up/" -e "s/.*broadcast 255.255.255.255/#&/" | \
#    tee /usr/local/sbin/dhclient-script > /usr/local/sbin/dhclient-script-resolvconf
#chmod a+x /usr/local/sbin/dhclient-script-resolvconf /usr/local/sbin/dhclient-script

cat > /usr/local/etc/dhclient.conf << \EOF
timeout 45;request subnet-mask, broadcast-address, time-offset, routers, domain-name, domain-search, domain-name-servers, ntp-servers , interface-mtu;
script "/usr/local/sbin/dhclient-script-resolvconf";
EOF
cat /usr/local/etc/dhclient.conf > /etc/dhclient.conf

#pip2.7 install --upgrade  virtualenv argparse boto requests paste prettytable oauth configobj pylint nose mocker PyYAML iso8601

#curl https://github.com/pellaeon/bsd-cloudinit/archive/master.tar.gz | tar -xzvf - -C '/root'
#curl https://codeload.github.com/pellaeon/bsd-cloudinit/tar.gz/master| tar -xzvf - -C '/root'

#curl -L https://launchpad.net/cloud-init/trunk/0.7.5/+download/cloud-init-0.7.5.tar.gz| tar -xzvf - -C '/root'
#(cd /root/cloud-init-0.7.5 python setup.py install)

echo 'console="comconsole,vidconsole"' > /boot/loader.conf
echo 'autoboot_delay="2"' >> /boot/loader.conf

chsh -s /usr/local/bin/bash root
chpass -p '' root
#pw useradd -n cloud-user -g wheel -s /usr/local/bin/bash -c "Default cloud user"
#echo -e 'cloud-user\tALL=(ALL)\tNOPASSWD: ALL' >> /usr/local/etc/sudoers

cat > /etc/rc.local << \EOF
PATH=$PATH:/usr/local/sbin:/usr/local/bin
export PATH

duid-uuid-update
/usr/local/sbin/dhclient -6 -nw em0
ndisc_update 2>&1 &

/yc2/firstboot.sh

EOF

cat > /etc/sysctl.conf << \EOF
net.inet6.ip6.accept_rtadv=1
EOF

cat > /etc/rc.conf << \EOF
hostname="newborn"
ifconfig_em0="DHCP"
sshd_enable="YES"
ntpdate_enable="YES"
ntpd_enable="YES"
# Set dumpdev to "AUTO" to enable crash dumps, "NO" to disable
dumpdev="NO"
ifconfig_vtnet0_name="em0"
ifconfig_em0_ipv6="inet6 accept_rtadv"
rtsold_enable="YES"
background_dhclient="NO"
defaultroute_delay="0"
dhclient_program="/usr/local/sbin/dhclient"
dhclient_flags="-4 -nw"
avahi_autoipd_enable="YES"
avahi_autoipd_flags="-D em0"
EOF

cat >> /etc/profile << \EOF
MAN_PATH=$MAN_PATH:/usr/local/share/man
export MAN_PATH
EOF

cat > /usr/local/etc/rc.d/avahi-autoipd << \EOF
#!/bin/sh
#
# PROVIDE: avahi-autoipd
# REQUIRE: netif
# BEFORE: NETWORKING
# KEYWORD: nojail shutdown
#
# Avahi's mDNSResponder, a Zeroconf (Bonjour) service advertisement daemon.
#

avahi_autoipd_flags=${avahi_autoipd_flags-"-D em0:avahi"}

. /etc/rc.subr
. /usr/local/etc/gnome.subr

avahi_autoipd_enable=${avahi_autoipd_enable-${gnome_enable}}

name=avahi-autoipd
rcvar=avahi_autoipd_enable

start_cmd=avahi_autoipd_start
stop_cmd=avahi_autoipd_stop

avahi_autoipd_bin=/usr/local/sbin/avahi-autoipd

avahi_autoipd_start() {
    checkyesno avahi_autoipd_enable && echo "Starting avahi-autoipd." && \
    	${avahi_autoipd_bin} ${avahi_autoipd_flags}
}

avahi_autoipd_stop() {
    checkyesno avahi_autoipd_enable && echo "Stopping avahi-autoipd." && \
    	${avahi_autoipd_bin} -k ${avahi_autoipd_flags}
}

load_rc_config ${name}
run_rc_command "$1"
EOF

chmod a+x /usr/local/etc/rc.d/avahi-autoipd

#(cd /tmp
#fetch --ca-cert=/usr/local/share/certs/ca-root-nss.crt https://raw.github.com/pellaeon/bsd-cloudinit-installer/master/installer.sh
#chmod +x installer.sh
#./installer.sh
#)

